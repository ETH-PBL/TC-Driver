<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="scan__sim_8py" kind="file" language="Python">
    <compoundname>scan_sim.py</compoundname>
    <innerclass refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d" prot="public">f110_gym::unittest::scan_sim::ScanSimulator2D</innerclass>
    <innerclass refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests" prot="public">f110_gym::unittest::scan_sim::ScanTests</innerclass>
    <innernamespace refid="namespacef110__gym_1_1unittest_1_1scan__sim">f110_gym::unittest::scan_sim</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>MIT<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Joseph<sp/>Auckley,<sp/>Matthew<sp/>O&apos;Kelly,<sp/>Aman<sp/>Sinha,<sp/>Hongrui<sp/>Zheng</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">Prototype<sp/>of<sp/>Utility<sp/>functions<sp/>and<sp/>classes<sp/>for<sp/>simulating<sp/>2D<sp/>LIDAR<sp/>scans</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">Author:<sp/>Hongrui<sp/>Zheng</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.ndimage<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>distance_transform_edt<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>edt</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>PIL<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Image</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>yaml</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>timeit</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_dt(bitmap,<sp/>resolution):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Distance<sp/>transformation,<sp/>returns<sp/>the<sp/>distance<sp/>matrix<sp/>from<sp/>the<sp/>input<sp/>bitmap.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Uses<sp/>scipy.ndimage,<sp/>cannot<sp/>be<sp/>JITted.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmap<sp/>(numpy.ndarray,<sp/>(n,<sp/>m)):<sp/>input<sp/>binary<sp/>bitmap<sp/>of<sp/>the<sp/>environment,<sp/>where<sp/>0<sp/>is<sp/>obstacles,<sp/>and<sp/>255<sp/>(or<sp/>anything<sp/>&gt;<sp/>0)<sp/>is<sp/>freespace</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolution<sp/>(float):<sp/>resolution<sp/>of<sp/>the<sp/>input<sp/>bitmap<sp/>(m/cell)</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>(numpy.ndarray,<sp/>(n,<sp/>m)):<sp/>output<sp/>distance<sp/>matrix,<sp/>where<sp/>each<sp/>cell<sp/>has<sp/>the<sp/>corresponding<sp/>distance<sp/>(in<sp/>meters)<sp/>to<sp/>the<sp/>closest<sp/>obstacle</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>resolution<sp/>*<sp/>edt(bitmap)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dt</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">@njit(cache=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">xy_2_rc(x,<sp/>y,<sp/>orig_x,<sp/>orig_y,<sp/>orig_c,<sp/>orig_s,<sp/>height,<sp/>width,<sp/>resolution):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Translate<sp/>(x,<sp/>y)<sp/>coordinate<sp/>into<sp/>(r,<sp/>c)<sp/>in<sp/>the<sp/>matrix</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>(float):<sp/>coordinate<sp/>in<sp/>x<sp/>(m)</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>(float):<sp/>coordinate<sp/>in<sp/>y<sp/>(m)</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_x<sp/>(float):<sp/>x<sp/>coordinate<sp/>of<sp/>the<sp/>map<sp/>origin<sp/>(m)</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_y<sp/>(float):<sp/>y<sp/>coordinate<sp/>of<sp/>the<sp/>map<sp/>origin<sp/>(m)</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>(int):<sp/>row<sp/>number<sp/>in<sp/>the<sp/>transform<sp/>matrix<sp/>of<sp/>the<sp/>given<sp/>point</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>(int):<sp/>column<sp/>number<sp/>in<sp/>the<sp/>transform<sp/>matrix<sp/>of<sp/>the<sp/>given<sp/>point</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>x_trans<sp/>=<sp/>x<sp/>-<sp/>orig_x</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>y_trans<sp/>=<sp/>y<sp/>-<sp/>orig_y</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>x_rot<sp/>=<sp/>x_trans<sp/>*<sp/>orig_c<sp/>+<sp/>y_trans<sp/>*<sp/>orig_s</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>y_rot<sp/>=<sp/>-x_trans<sp/>*<sp/>orig_s<sp/>+<sp/>y_trans<sp/>*<sp/>orig_c</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>clip<sp/>the<sp/>state<sp/>to<sp/>be<sp/>a<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x_rot<sp/>&lt;<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x_rot<sp/>&gt;=<sp/>width<sp/>*<sp/>resolution<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>y_rot<sp/>&lt;<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>y_rot<sp/>&gt;=<sp/>height<sp/>*<sp/>resolution:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>int(x_rot/resolution)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>int(y_rot/resolution)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r,<sp/>c</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">@njit(cache=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">distance_transform(x,<sp/>y,<sp/>orig_x,<sp/>orig_y,<sp/>orig_c,<sp/>orig_s,<sp/>height,<sp/>width,<sp/>resolution,<sp/>dt):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Look<sp/>up<sp/>corresponding<sp/>distance<sp/>in<sp/>the<sp/>distance<sp/>matrix</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>(float):<sp/>x<sp/>coordinate<sp/>of<sp/>the<sp/>lookup<sp/>point</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>(float):<sp/>y<sp/>coordinate<sp/>of<sp/>the<sp/>lookup<sp/>point</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_x<sp/>(float):<sp/>x<sp/>coordinate<sp/>of<sp/>the<sp/>map<sp/>origin<sp/>(m)</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_y<sp/>(float):<sp/>y<sp/>coordinate<sp/>of<sp/>the<sp/>map<sp/>origin<sp/>(m)</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>(float):<sp/>corresponding<sp/>shortest<sp/>distance<sp/>to<sp/>obstacle<sp/>in<sp/>meters</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>r,<sp/>c<sp/>=<sp/>xy_2_rc(x,<sp/>y,<sp/>orig_x,<sp/>orig_y,<sp/>orig_c,<sp/>orig_s,<sp/>height,<sp/>width,<sp/>resolution)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>dt[r,<sp/>c]</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distance</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">@njit(cache=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">trace_ray(x,<sp/>y,<sp/>theta_index,<sp/>sines,<sp/>cosines,<sp/>eps,<sp/>orig_x,<sp/>orig_y,<sp/>orig_c,<sp/>orig_s,<sp/>height,<sp/>width,<sp/>resolution,<sp/>dt,<sp/>max_range):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Find<sp/>the<sp/>length<sp/>of<sp/>a<sp/>specific<sp/>ray<sp/>at<sp/>a<sp/>specific<sp/>scan<sp/>angle<sp/>theta</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purely<sp/>math<sp/>calculation<sp/>and<sp/>loops,<sp/>should<sp/>be<sp/>JITted.</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>(float):<sp/>current<sp/>x<sp/>coordinate<sp/>of<sp/>the<sp/>ego<sp/>(scan)<sp/>frame</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>(float):<sp/>current<sp/>y<sp/>coordinate<sp/>of<sp/>the<sp/>ego<sp/>(scan)<sp/>frame</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_index(int):<sp/>current<sp/>index<sp/>of<sp/>the<sp/>scan<sp/>beam<sp/>in<sp/>the<sp/>scan<sp/>range</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sines<sp/>(numpy.ndarray<sp/>(n,<sp/>)):<sp/>pre-calculated<sp/>sines<sp/>of<sp/>the<sp/>angle<sp/>array</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosines<sp/>(numpy.ndarray<sp/>(n,<sp/>)):<sp/>pre-calculated<sp/>cosines<sp/>...</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_distance<sp/>(float):<sp/>the<sp/>distance<sp/>to<sp/>first<sp/>obstacle<sp/>on<sp/>the<sp/>current<sp/>scan<sp/>beam</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>int<sp/>casting,<sp/>and<sp/>index<sp/>precal<sp/>trigs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>theta_index_<sp/>=<sp/>int(theta_index)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sines[theta_index_]</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>cosines[theta_index_]</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>distance<sp/>to<sp/>nearest<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>dist_to_nearest<sp/>=<sp/>distance_transform(x,<sp/>y,<sp/>orig_x,<sp/>orig_y,<sp/>orig_c,<sp/>orig_s,<sp/>height,<sp/>width,<sp/>resolution,<sp/>dt)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>total_dist<sp/>=<sp/>dist_to_nearest</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ray<sp/>tracing<sp/>iterations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>dist_to_nearest<sp/>&gt;<sp/>eps<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>total_dist<sp/>&lt;=<sp/>max_range:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>move<sp/>in<sp/>the<sp/>direction<sp/>of<sp/>the<sp/>ray<sp/>by<sp/>dist_to_nearest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>dist_to_nearest<sp/>*<sp/>c</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>dist_to_nearest<sp/>*<sp/>s</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>update<sp/>dist_to_nearest<sp/>for<sp/>current<sp/>point<sp/>on<sp/>ray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>also<sp/>keeps<sp/>track<sp/>of<sp/>total<sp/>ray<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist_to_nearest<sp/>=<sp/>distance_transform(x,<sp/>y,<sp/>orig_x,<sp/>orig_y,<sp/>orig_c,<sp/>orig_s,<sp/>height,<sp/>width,<sp/>resolution,<sp/>dt)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_dist<sp/>+=<sp/>dist_to_nearest</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_dist</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">@njit(cache=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_scan(pose,<sp/>theta_dis,<sp/>fov,<sp/>num_beams,<sp/>theta_index_increment,<sp/>sines,<sp/>cosines,<sp/>eps,<sp/>orig_x,<sp/>orig_y,<sp/>orig_c,<sp/>orig_s,<sp/>height,<sp/>width,<sp/>resolution,<sp/>dt,<sp/>max_range):</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Perform<sp/>the<sp/>scan<sp/>for<sp/>each<sp/>discretized<sp/>angle<sp/>of<sp/>each<sp/>beam<sp/>of<sp/>the<sp/>laser,<sp/>loop<sp/>heavy,<sp/>should<sp/>be<sp/>JITted</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose<sp/>(numpy.ndarray(3,<sp/>)):<sp/>current<sp/>pose<sp/>of<sp/>the<sp/>scan<sp/>frame<sp/>in<sp/>the<sp/>map</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_dis<sp/>(int):<sp/>number<sp/>of<sp/>steps<sp/>to<sp/>discretize<sp/>the<sp/>angles<sp/>between<sp/>0<sp/>and<sp/>2pi<sp/>for<sp/>look<sp/>up</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fov<sp/>(float):<sp/>field<sp/>of<sp/>view<sp/>of<sp/>the<sp/>laser<sp/>scan</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_beams<sp/>(int):<sp/>number<sp/>of<sp/>beams<sp/>in<sp/>the<sp/>scan</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_index_increment<sp/>(float):<sp/>increment<sp/>between<sp/>angle<sp/>indices<sp/>after<sp/>discretization</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan<sp/>(numpy.ndarray(n,<sp/>)):<sp/>resulting<sp/>laser<sp/>scan<sp/>at<sp/>the<sp/>pose,<sp/>n=num_beams</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>empty<sp/>scan<sp/>array<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>scan<sp/>=<sp/>np.empty((num_beams,))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>theta<sp/>discrete<sp/>by<sp/>mapping<sp/>the<sp/>range<sp/>[-pi,<sp/>pi]<sp/>onto<sp/>[0,<sp/>theta_dis]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>theta_index<sp/>=<sp/>theta_dis<sp/>*<sp/>(pose[2]<sp/>-<sp/>fov/2.)/(2.<sp/>*<sp/>np.pi)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>sure<sp/>it&apos;s<sp/>wrapped<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>theta_index<sp/>=<sp/>np.fmod(theta_index,<sp/>theta_dis)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(theta_index<sp/>&lt;<sp/>0):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_index<sp/>+=<sp/>theta_dis</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sweep<sp/>through<sp/>each<sp/>beam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>num_beams):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>trace<sp/>the<sp/>current<sp/>beam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan[i]<sp/>=<sp/>trace_ray(pose[0],<sp/>pose[1],<sp/>theta_index,<sp/>sines,<sp/>cosines,<sp/>eps,<sp/>orig_x,<sp/>orig_y,<sp/>orig_c,<sp/>orig_s,<sp/>height,<sp/>width,<sp/>resolution,<sp/>dt,<sp/>max_range)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>increment<sp/>the<sp/>beam<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_index<sp/>+=<sp/>theta_index_increment</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>sure<sp/>it<sp/>stays<sp/>in<sp/>the<sp/>range<sp/>[0,<sp/>theta_dis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>theta_index<sp/>&gt;=<sp/>theta_dis:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_index<sp/>-=<sp/>theta_dis</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scan</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d" kindref="compound">ScanSimulator2D</ref>(object):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>2D<sp/>LIDAR<sp/>scan<sp/>simulator<sp/>class</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Init<sp/>params:</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_beams<sp/>(int):<sp/>number<sp/>of<sp/>beams<sp/>in<sp/>the<sp/>scan</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fov<sp/>(float):<sp/>field<sp/>of<sp/>view<sp/>of<sp/>the<sp/>laser<sp/>scan</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std_dev<sp/>(float,<sp/>default=0.01):<sp/>standard<sp/>deviation<sp/>of<sp/>the<sp/>generated<sp/>whitenoise<sp/>in<sp/>the<sp/>scan</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps<sp/>(float,<sp/>default=0.0001):<sp/>ray<sp/>tracing<sp/>iteration<sp/>termination<sp/>condition</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_dis<sp/>(int,<sp/>default=2000):<sp/>number<sp/>of<sp/>steps<sp/>to<sp/>discretize<sp/>the<sp/>angles<sp/>between<sp/>0<sp/>and<sp/>2pi<sp/>for<sp/>look<sp/>up</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_range<sp/>(float,<sp/>default=30.0):<sp/>maximum<sp/>range<sp/>of<sp/>the<sp/>laser</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seed<sp/>(int,<sp/>default=123):<sp/>seed<sp/>for<sp/>random<sp/>number<sp/>generator<sp/>for<sp/>the<sp/>whitenoise<sp/>in<sp/>scan</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>num_beams,<sp/>fov,<sp/>std_dev=0.01,<sp/>eps=0.0001,<sp/>theta_dis=2000,<sp/>max_range=30.0,<sp/>seed=123):</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>initialization<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ab651a44dfee70e7f2c2c8389b95e6e51" kindref="member">num_beams</ref><sp/>=<sp/>num_beams</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a675555c29ace0ea5ddea92835965e654" kindref="member">fov</ref><sp/>=<sp/>fov</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1af5f188b7150482f5518461af89d61fe7" kindref="member">std_dev</ref><sp/>=<sp/>std_dev</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ae0b3e8aec78d765f2c64fc274b9e447f" kindref="member">eps</ref><sp/>=<sp/>eps</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1aad699977c807e3ad150b6dac8b2bb1a0" kindref="member">theta_dis</ref><sp/>=<sp/>theta_dis</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a510e60d159e716bcd62b54dac8a69066" kindref="member">max_range</ref><sp/>=<sp/>max_range</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a7cf918616a14c3d8f76bc359cf2f1c4c" kindref="member">angle_increment</ref><sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a675555c29ace0ea5ddea92835965e654" kindref="member">fov</ref><sp/>/<sp/>(self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ab651a44dfee70e7f2c2c8389b95e6e51" kindref="member">num_beams</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a52a218f72d96e62281f00e3aa01f6616" kindref="member">theta_index_increment</ref><sp/>=<sp/>theta_dis<sp/>*<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a7cf918616a14c3d8f76bc359cf2f1c4c" kindref="member">angle_increment</ref><sp/>/<sp/>(2.<sp/>*<sp/>np.pi)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a6fb0a8e58e42af2934c5f3e35ab3488e" kindref="member">orig_c</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ac1a4dcaf191c8308accbcf86999efd5c" kindref="member">orig_s</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a49263002630bb21764217caa6c3314b7" kindref="member">orig_x</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ab6b56af3b1396d900b097d4e0463941f" kindref="member">orig_y</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a7b15deec5d81ddfa0c6297523cdfc295" kindref="member">map_height</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ac5acff270a2a66d20a8bb514001cc3c4" kindref="member">map_width</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a935128be3649ba7d230f63bf7480bfa1" kindref="member">map_resolution</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a184ddbfb8a5aaebb9c523625f716ad7c" kindref="member">dt</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>white<sp/>noise<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1afcb7de24911c98dd85473247c7d4af17" kindref="member">rng</ref><sp/>=<sp/>np.random.default_rng(seed=seed)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>precomputing<sp/>corresponding<sp/>cosines<sp/>and<sp/>sines<sp/>of<sp/>the<sp/>angle<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_arr<sp/>=<sp/>np.linspace(0.0,<sp/>2*np.pi,<sp/>num=theta_dis)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1af2c50f973462f4717c9c02d6c8d47004" kindref="member">sines</ref><sp/>=<sp/>np.sin(theta_arr)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a578ecb22495b2d227517b8a54a505c7e" kindref="member">cosines</ref><sp/>=<sp/>np.cos(theta_arr)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a00925f5100ae8b2e556154e8935ea86e" kindref="member">set_map</ref>(self,<sp/>map_path,<sp/>map_ext):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>the<sp/>bitmap<sp/>of<sp/>the<sp/>scan<sp/>simulator<sp/>by<sp/>path</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_path<sp/>(str):<sp/>path<sp/>to<sp/>the<sp/>map<sp/>yaml<sp/>file</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_ext<sp/>(str):<sp/>extension<sp/>(image<sp/>type)<sp/>of<sp/>the<sp/>map<sp/>image</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>(bool):<sp/>if<sp/>image<sp/>reading<sp/>and<sp/>loading<sp/>is<sp/>successful</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>do<sp/>we<sp/>open<sp/>the<sp/>option<sp/>to<sp/>flip<sp/>the<sp/>images,<sp/>and<sp/>turn<sp/>rgb<sp/>into<sp/>grayscale?<sp/>or<sp/>specify<sp/>the<sp/>exact<sp/>requirements<sp/>in<sp/>documentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>throw<sp/>error<sp/>if<sp/>image<sp/>specification<sp/>isn&apos;t<sp/>met</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>load<sp/>map<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_img_path<sp/>=<sp/>os.path.splitext(map_path)[0]<sp/>+<sp/>map_ext</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref><sp/>=<sp/>np.array(Image.open(map_img_path).transpose(Image.FLIP_TOP_BOTTOM))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref><sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref>.astype(np.float64)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>grayscale<sp/>-&gt;<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref>[self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref><sp/>&lt;=<sp/>128.]<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref>[self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref><sp/>&gt;<sp/>128.]<sp/>=<sp/>255.</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a7b15deec5d81ddfa0c6297523cdfc295" kindref="member">map_height</ref><sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref>.shape[0]</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ac5acff270a2a66d20a8bb514001cc3c4" kindref="member">map_width</ref><sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref>.shape[1]</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>load<sp/>map<sp/>yaml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(map_path,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>yaml_stream:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_metadata<sp/>=<sp/>yaml.safe_load(yaml_stream)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a935128be3649ba7d230f63bf7480bfa1" kindref="member">map_resolution</ref><sp/>=<sp/>map_metadata[</highlight><highlight class="stringliteral">&apos;resolution&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a62fb5e7c6a7060685208643a265aaa95" kindref="member">origin</ref><sp/>=<sp/>map_metadata[</highlight><highlight class="stringliteral">&apos;origin&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>yaml.YAMLError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(ex)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>calculate<sp/>map<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a49263002630bb21764217caa6c3314b7" kindref="member">orig_x</ref><sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a62fb5e7c6a7060685208643a265aaa95" kindref="member">origin</ref>[0]</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ab6b56af3b1396d900b097d4e0463941f" kindref="member">orig_y</ref><sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a62fb5e7c6a7060685208643a265aaa95" kindref="member">origin</ref>[1]</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ac1a4dcaf191c8308accbcf86999efd5c" kindref="member">orig_s</ref><sp/>=<sp/>np.sin(self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a62fb5e7c6a7060685208643a265aaa95" kindref="member">origin</ref>[2])</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a6fb0a8e58e42af2934c5f3e35ab3488e" kindref="member">orig_c</ref><sp/>=<sp/>np.cos(self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a62fb5e7c6a7060685208643a265aaa95" kindref="member">origin</ref>[2])</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>the<sp/>distance<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a184ddbfb8a5aaebb9c523625f716ad7c" kindref="member">dt</ref><sp/>=<sp/>get_dt(self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a15778cb625d962a2481cbc34854044dd" kindref="member">map_img</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a935128be3649ba7d230f63bf7480bfa1" kindref="member">map_resolution</ref>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a038a0fc7e42df7827c175fdb3755f2c4" kindref="member">scan</ref>(self,<sp/>pose):</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Perform<sp/>simulated<sp/>2D<sp/>scan<sp/>by<sp/>pose<sp/>on<sp/>the<sp/>given<sp/>map</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pose<sp/>(numpy.ndarray<sp/>(3,<sp/>)):<sp/>pose<sp/>of<sp/>the<sp/>scan<sp/>frame<sp/>(x,<sp/>y,<sp/>theta)</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan<sp/>(numpy.ndarray<sp/>(n,<sp/>)):<sp/>data<sp/>array<sp/>of<sp/>the<sp/>laserscan,<sp/>n=num_beams</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueError:<sp/>when<sp/>scan<sp/>is<sp/>called<sp/>before<sp/>a<sp/>map<sp/>is<sp/>set</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a7b15deec5d81ddfa0c6297523cdfc295" kindref="member">map_height</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Map<sp/>is<sp/>not<sp/>set<sp/>for<sp/>scan<sp/>simulator.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan<sp/>=<sp/>get_scan(pose,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1aad699977c807e3ad150b6dac8b2bb1a0" kindref="member">theta_dis</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a675555c29ace0ea5ddea92835965e654" kindref="member">fov</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ab651a44dfee70e7f2c2c8389b95e6e51" kindref="member">num_beams</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a52a218f72d96e62281f00e3aa01f6616" kindref="member">theta_index_increment</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1af2c50f973462f4717c9c02d6c8d47004" kindref="member">sines</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a578ecb22495b2d227517b8a54a505c7e" kindref="member">cosines</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ae0b3e8aec78d765f2c64fc274b9e447f" kindref="member">eps</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a49263002630bb21764217caa6c3314b7" kindref="member">orig_x</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ab6b56af3b1396d900b097d4e0463941f" kindref="member">orig_y</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a6fb0a8e58e42af2934c5f3e35ab3488e" kindref="member">orig_c</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ac1a4dcaf191c8308accbcf86999efd5c" kindref="member">orig_s</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a7b15deec5d81ddfa0c6297523cdfc295" kindref="member">map_height</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ac5acff270a2a66d20a8bb514001cc3c4" kindref="member">map_width</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a935128be3649ba7d230f63bf7480bfa1" kindref="member">map_resolution</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a184ddbfb8a5aaebb9c523625f716ad7c" kindref="member">dt</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a510e60d159e716bcd62b54dac8a69066" kindref="member">max_range</ref>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise<sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1afcb7de24911c98dd85473247c7d4af17" kindref="member">rng</ref>.normal(0.,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1af5f188b7150482f5518461af89d61fe7" kindref="member">std_dev</ref>,<sp/>size=self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1ab651a44dfee70e7f2c2c8389b95e6e51" kindref="member">num_beams</ref>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_scan<sp/>=<sp/>scan<sp/>+<sp/>noise</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>final_scan</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_increment(self):</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d_1a7cf918616a14c3d8f76bc359cf2f1c4c" kindref="member">angle_increment</ref></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral">Unit<sp/>tests<sp/>for<sp/>the<sp/>2D<sp/>scan<sp/>simulator<sp/>class</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral">Author:<sp/>Hongrui<sp/>Zheng</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral">Test<sp/>cases:</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>1,<sp/>2:<sp/>Comparison<sp/>between<sp/>generated<sp/>scan<sp/>array<sp/>of<sp/>the<sp/>new<sp/>simulator<sp/>and<sp/>the<sp/>legacy<sp/>C++<sp/>simulator,<sp/>generated<sp/>data<sp/>used,<sp/>MSE<sp/>is<sp/>used<sp/>as<sp/>the<sp/>metric</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>2.<sp/>FPS<sp/>test,<sp/>should<sp/>be<sp/>greater<sp/>than<sp/>500</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests" kindref="compound">ScanTests</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">setUp(self):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>test<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1af6405e794509630382bd714bfc01e833" kindref="member">num_beams</ref><sp/>=<sp/>1080</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a320c224064a2dcdba7ad712525e32e88" kindref="member">fov</ref><sp/>=<sp/>4.7</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a3beafc32194d2dd32a0a97885ba97539" kindref="member">num_test</ref><sp/>=<sp/>10</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1ad63cebbd6245dfa62dd57168287598b1" kindref="member">test_poses</ref><sp/>=<sp/>np.zeros((self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a3beafc32194d2dd32a0a97885ba97539" kindref="member">num_test</ref>,<sp/>3))</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1ad63cebbd6245dfa62dd57168287598b1" kindref="member">test_poses</ref>[:,<sp/>2]<sp/>=<sp/>np.linspace(-1.,<sp/>1.,<sp/>num=self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a3beafc32194d2dd32a0a97885ba97539" kindref="member">num_test</ref>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>legacy<sp/>gym<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_scan<sp/>=<sp/>np.load(</highlight><highlight class="stringliteral">&apos;legacy_scan.npz&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a44186810ed5ab4fecb230b7a842d294a" kindref="member">berlin_scan</ref><sp/>=<sp/>sample_scan[</highlight><highlight class="stringliteral">&apos;berlin&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a9c595846d38b4691fd34352eea08cdcf" kindref="member">skirk_scan</ref><sp/>=<sp/>sample_scan[</highlight><highlight class="stringliteral">&apos;skirk&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_map_berlin(self):</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_sim<sp/>=<sp/><ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d" kindref="compound">ScanSimulator2D</ref>(self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1af6405e794509630382bd714bfc01e833" kindref="member">num_beams</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a320c224064a2dcdba7ad712525e32e88" kindref="member">fov</ref>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_berlin<sp/>=<sp/>np.empty((self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a3beafc32194d2dd32a0a97885ba97539" kindref="member">num_test</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1af6405e794509630382bd714bfc01e833" kindref="member">num_beams</ref>))</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_path<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;../../../maps/berlin.yaml&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_ext<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;.png&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_sim.set_map(map_path,<sp/>map_ext)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scan<sp/>gen<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a3beafc32194d2dd32a0a97885ba97539" kindref="member">num_test</ref>):</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pose<sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1ad63cebbd6245dfa62dd57168287598b1" kindref="member">test_poses</ref>[i]</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_berlin[i,:]<sp/>=<sp/>scan_sim.scan(test_pose)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a44186810ed5ab4fecb230b7a842d294a" kindref="member">berlin_scan</ref><sp/>-<sp/>new_berlin</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mse<sp/>=<sp/>np.mean(diff**2)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&apos;Levine<sp/>distance<sp/>test,<sp/>norm:<sp/>&apos;<sp/>+<sp/>str(norm))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plotting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>np.linspace(-self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a320c224064a2dcdba7ad712525e32e88" kindref="member">fov</ref>/2.,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a320c224064a2dcdba7ad712525e32e88" kindref="member">fov</ref>/2.,<sp/>num=self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1af6405e794509630382bd714bfc01e833" kindref="member">num_beams</ref>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.polar(theta,<sp/>new_berlin[1,:],<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>lw=0)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.polar(theta,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a44186810ed5ab4fecb230b7a842d294a" kindref="member">berlin_scan</ref>[1,:],<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>lw=0)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertLess(mse,<sp/>2.)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_map_skirk(self):</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_sim<sp/>=<sp/><ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d" kindref="compound">ScanSimulator2D</ref>(self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1af6405e794509630382bd714bfc01e833" kindref="member">num_beams</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a320c224064a2dcdba7ad712525e32e88" kindref="member">fov</ref>)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_skirk<sp/>=<sp/>np.empty((self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a3beafc32194d2dd32a0a97885ba97539" kindref="member">num_test</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1af6405e794509630382bd714bfc01e833" kindref="member">num_beams</ref>))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_path<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;../../../maps/skirk.yaml&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_ext<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;.png&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_sim.set_map(map_path,<sp/>map_ext)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;map<sp/>set&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scan<sp/>gen<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a3beafc32194d2dd32a0a97885ba97539" kindref="member">num_test</ref>):</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pose<sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1ad63cebbd6245dfa62dd57168287598b1" kindref="member">test_poses</ref>[i]</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_skirk[i,:]<sp/>=<sp/>scan_sim.scan(test_pose)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a9c595846d38b4691fd34352eea08cdcf" kindref="member">skirk_scan</ref><sp/>-<sp/>new_skirk</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mse<sp/>=<sp/>np.mean(diff**2)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;skirk<sp/>distance<sp/>test,<sp/>mse:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(mse))</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plotting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>np.linspace(-self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a320c224064a2dcdba7ad712525e32e88" kindref="member">fov</ref>/2.,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a320c224064a2dcdba7ad712525e32e88" kindref="member">fov</ref>/2.,<sp/>num=self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1af6405e794509630382bd714bfc01e833" kindref="member">num_beams</ref>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.polar(theta,<sp/>new_skirk[1,:],<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>lw=0)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.polar(theta,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a9c595846d38b4691fd34352eea08cdcf" kindref="member">skirk_scan</ref>[1,:],<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>lw=0)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertLess(mse,<sp/>2.)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_fps(self):</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scan<sp/>fps<sp/>should<sp/>be<sp/>greater<sp/>than<sp/>500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_sim<sp/>=<sp/><ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d" kindref="compound">ScanSimulator2D</ref>(self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1af6405e794509630382bd714bfc01e833" kindref="member">num_beams</ref>,<sp/>self.<ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_tests_1a320c224064a2dcdba7ad712525e32e88" kindref="member">fov</ref>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_path<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;../../../maps/skirk.yaml&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_ext<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;.png&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan_sim.set_map(map_path,<sp/>map_ext)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(10000):</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_test<sp/>=<sp/>i/10000</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan<sp/>=<sp/>scan_sim.scan(np.array([x_test,<sp/>0.,<sp/>0.]))</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fps<sp/>=<sp/>10000/(end-start)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&apos;FPS<sp/>test&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&apos;Elapsed<sp/>time:<sp/>&apos;<sp/>+<sp/>str(end-start)<sp/>+<sp/>&apos;<sp/>,<sp/>FPS:<sp/>&apos;<sp/>+<sp/>str(1/fps))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertGreater(fps,<sp/>500.)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">main():</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>num_beams<sp/>=<sp/>1080</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>fov<sp/>=<sp/>4.7</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>map_path<sp/>=<sp/>&apos;../envs/maps/berlin.yaml&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>map_path<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;/home/f1tenth-eval/tunercar/es/maps/map0.yaml&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>map_ext<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;.png&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_sim<sp/>=<sp/><ref refid="classf110__gym_1_1unittest_1_1scan__sim_1_1_scan_simulator2_d" kindref="compound">ScanSimulator2D</ref>(num_beams,<sp/>fov)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_sim.set_map(map_path,<sp/>map_ext)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>scan<sp/>=<sp/>scan_sim.scan(np.array([0.,<sp/>0.,<sp/>0.]))</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fps<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(10000):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_test<sp/>=<sp/>i/10000</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan<sp/>=<sp/>scan_sim.scan(np.array([x_test,<sp/>0.,<sp/>0.]))</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>fps<sp/>=<sp/>(end-start)/10000</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;FPS<sp/>test&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Elapsed<sp/>time:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(end-start)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>,<sp/>FPS:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(1/fps))</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>visualization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>matplotlib.animation<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FuncAnimation</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>num_iter<sp/>=<sp/>100</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>np.linspace(-fov/2.,<sp/>fov/2.,<sp/>num=num_beams)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>plt.figure()</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>ax<sp/>=<sp/>fig.add_subplot(111,<sp/>projection=</highlight><highlight class="stringliteral">&apos;polar&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_ylim(0,<sp/>70)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>line,<sp/>=<sp/>ax.plot([],<sp/>[],<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>lw=0)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">update(i):</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>x_ani<sp/>=<sp/>i<sp/>*<sp/>3.<sp/>/<sp/>num_iter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta_ani<sp/>=<sp/>-i<sp/>*<sp/>2<sp/>*<sp/>np.pi<sp/>/<sp/>num_iter</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_ani<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_scan<sp/>=<sp/>scan_sim.scan(np.array([x_ani,<sp/>0.,<sp/>theta_ani]))</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(np.max(current_scan))</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line.set_data(theta,<sp/>current_scan)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>line,<sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>ani<sp/>=<sp/>FuncAnimation(fig,<sp/>update,<sp/>frames=num_iter,<sp/>blit=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>unittest.main()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>main()</highlight></codeline>
    </programlisting>
    <location file="/home/billyzheng/f1tenth_gym/gym/f110_gym/unittest/scan_sim.py"/>
  </compounddef>
</doxygen>
