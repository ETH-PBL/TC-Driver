2022-07-08 18:21:35,520 INFO    MainThread:5110 [wandb_setup.py:_flush():71] setting env: {}
2022-07-08 18:21:35,520 INFO    MainThread:5110 [wandb_init.py:_log_setup():357] Logging user logs to /home/nicolas/Documents/pbl_f110_gym/wandb/offline-run-20220708_182135-3mv08148/logs/debug.log
2022-07-08 18:21:35,520 INFO    MainThread:5110 [wandb_init.py:_log_setup():358] Logging internal logs to /home/nicolas/Documents/pbl_f110_gym/wandb/offline-run-20220708_182135-3mv08148/logs/debug-internal.log
2022-07-08 18:21:35,520 INFO    MainThread:5110 [wandb_init.py:init():390] calling init triggers
2022-07-08 18:21:35,520 INFO    MainThread:5110 [wandb_init.py:init():397] wandb.init called with sweep_config: {}
config: {'map': '/home/nicolas/Documents/pbl_f110_gym/configs/f', 'map_ext': '.png', 'random_init': True, 'sx': 1.023, 'sy': -0.04, 'stheta': 0, 'num_agents': 1, 'ep_len': 500, 'obs_type': 'Frenet', 'params_noise': True, 'var_mu': 0.00140625, 'var_Csf': 0, 'var_Csr': 0, 'redraw_upon_reset': True, 'angle_limit': 0.5235987755982988, 'use_trajectory': True, 'max_vel': 20, 'record_video': True, 'curriculum': False, 'policy_type': 'MlpPolicy', 'total_timesteps': 1000000.0, 'gamma': 0.99}
2022-07-08 18:21:35,520 INFO    MainThread:5110 [wandb_init.py:init():435] starting backend
2022-07-08 18:21:35,520 INFO    MainThread:5110 [backend.py:_multiprocessing_setup():97] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2022-07-08 18:21:35,526 INFO    MainThread:5110 [backend.py:ensure_launched():199] starting backend process...
2022-07-08 18:21:35,529 INFO    MainThread:5110 [backend.py:ensure_launched():205] started backend process with pid: 5125
2022-07-08 18:21:35,530 INFO    MainThread:5110 [wandb_init.py:init():444] backend started and connected
2022-07-08 18:21:35,534 INFO    MainThread:5110 [wandb_init.py:init():503] updated telemetry
2022-07-08 18:21:35,544 INFO    MainThread:5110 [wandb_init.py:init():576] starting run threads in backend
2022-07-08 18:21:38,262 INFO    MainThread:5110 [wandb_run.py:_console_start():1693] atexit reg
2022-07-08 18:21:38,262 INFO    MainThread:5110 [wandb_run.py:_redirect():1567] redirect: SettingsConsole.REDIRECT
2022-07-08 18:21:38,263 INFO    MainThread:5110 [wandb_run.py:_redirect():1572] Redirecting console.
2022-07-08 18:21:38,264 INFO    MainThread:5110 [wandb_run.py:_redirect():1628] Redirects installed.
2022-07-08 18:21:38,264 INFO    MainThread:5110 [wandb_init.py:init():603] run started, returning control to user process
2022-07-08 18:21:45,445 INFO    MainThread:5110 [wandb_run.py:_tensorboard_callback():984] tensorboard callback: runs/Frenet_SAC_f_noise_True_1657297294/SAC_1, None
2022-07-08 18:21:45,449 INFO    MainThread:5110 [wandb_watch.py:watch():43] Watching
2022-07-08 18:21:45,456 INFO    MainThread:5110 [wandb_run.py:_config_callback():911] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'stable_baselines3.sac.policies.SACPolicy'>", 'device': 'cpu', 'env': '<stable_baselines3.common.vec_env.vec_video_recorder.VecVideoRecorder object at 0x7f83001b3050>', '_vec_normalize_env': 'None', 'verbose': 1, 'policy_kwargs': "{'use_sde': False}", 'observation_space': 'Box([-1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1. -1.], [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.], (16,), float32)', 'action_space': 'Box([-1. -1.], [1. 1.], (2,), float32)', 'n_envs': 1, 'num_timesteps': 0, '_total_timesteps': 1000000.0, 'eval_env': 'None', 'seed': 'None', 'action_noise': 'None', 'start_time': 1657297305.3764408, 'policy': 'SACPolicy(\n  (actor): Actor(\n    (features_extractor): FlattenExtractor(\n      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (latent_pi): Sequential(\n      (0): Linear(in_features=16, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n    )\n    (mu): Linear(in_features=256, out_features=2, bias=True)\n    (log_std): Linear(in_features=256, out_features=2, bias=True)\n  )\n  (critic): ContinuousCritic(\n    (features_extractor): FlattenExtractor(\n      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=18, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=18, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n  )\n  (critic_target): ContinuousCritic(\n    (features_extractor): FlattenExtractor(\n      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=18, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=18, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n  )\n)', 'learning_rate': 0.0003, 'tensorboard_log': 'runs/Frenet_SAC_f_noise_True_1657297294', 'lr_schedule': '<function constant_fn.<locals>.func at 0x7f82c5a07170>', '_last_obs': '[[-0.9462411  -0.9429791  -0.9345141  -0.9052203  -0.8332554   0.3358087\n  -0.5630163  -0.78548497 -0.8488357  -0.8762818  -0.8799016  -0.68591386\n  -1.0002159  -0.9899497  -0.9899497  -1.        ]]', '_last_episode_starts': '[ True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_logger': '<stable_baselines3.common.logger.Logger object at 0x7f82c59fd2d0>', '_custom_logger': 'False', 'buffer_size': 1000000, 'batch_size': 64, 'learning_starts': 100, 'tau': 0.005, 'gradient_steps': 1, 'optimize_memory_usage': 'False', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.ReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'remove_time_limit_termination': 'False', 'train_freq': "TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'actor': 'Actor(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=16, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n  )\n  (mu): Linear(in_features=256, out_features=2, bias=True)\n  (log_std): Linear(in_features=256, out_features=2, bias=True)\n)', 'replay_buffer': '<stable_baselines3.common.buffers.ReplayBuffer object at 0x7f82c7384f10>', 'use_sde_at_warmup': 'False', 'target_entropy': '-2.0', 'log_ent_coef': 'tensor([0.], requires_grad=True)', 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    eps: 1e-08\n    lr: 0.0003\n    weight_decay: 0\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=18, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=18, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=18, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=18, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)'}
2022-07-08 18:23:02,399 INFO    MainThread:5110 [wandb_run.py:_atexit_cleanup():1663] got exitcode: 255
2022-07-08 18:23:02,401 INFO    MainThread:5110 [wandb_run.py:_restore():1635] restore
